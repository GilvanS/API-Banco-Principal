openapi: 3.0.0
info:
  title: API Banco Principal
  description: API para gerenciamento de contas e operações bancárias com papéis de usuário.
  version: 2.0.0
servers:
  - url: http://localhost:3000
    description: Servidor de Desenvolvimento

# Seção de segurança para autenticação JWT
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    UsuarioConta:
      type: object
      properties:
        id:
          type: string
          format: uuid
        nomeCompleto:
          type: string
        cpf:
          type: string
        role:
          type: string
          enum: [admin, operador]
        limiteCredito:
          type: number
          format: float
        contaBloqueada:
          type: boolean
        dataCriacao:
          type: string
          format: date-time
        dataAtualizacao:
          type: string
          format: date-time
    Error:
      type: object
      properties:
        erro:
          type: string

tags:
  - name: "Autenticação"
    description: "Operações de login."
  - name: "Contas (Operador)"
    description: "Operações que um OPERADOR pode realizar."
  - name: "Contas (Admin)"
    description: "Operações exclusivas para um ADMIN."

paths:
  /usuarios-contas/login:
    post:
      tags:
        - "Autenticação"
      summary: "Autentica um usuário e retorna um token JWT."
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [cpf, senha]
              properties:
                cpf:
                  type: string
                  example: "111.222.333-44"
                senha:
                  type: string
                  format: password
                  example: "SenhaValida123"
      responses:
        '200':
          description: "Login bem-sucedido."
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '401':
          description: "CPF ou senha inválidos."

  /usuarios-contas:
    post:
      tags:
        - "Contas (Operador)"
        - "Contas (Admin)"
      summary: "Cria um novo usuário (Operador ou Admin)."
      description: |
        Cria uma nova conta.
        - **Operadores** podem criar apenas outros operadores com limite fixo de 500.
        - **Admins** podem criar operadores ou outros admins, definindo limite, status de bloqueio e papel.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [nomeCompleto, cpf, senha]
              properties:
                nomeCompleto:
                  type: string
                  example: "Novo Operador"
                cpf:
                  type: string
                  example: "123.456.789-11"
                senha:
                  type: string
                  format: password
                  example: "SenhaForte123"
                role:
                  type: string
                  enum: [admin, operador]
                  description: "(Admin only) Define o papel do novo usuário."
                  example: "operador"
                limiteCredito:
                  type: number
                  description: "(Admin only) Define o limite de crédito inicial."
                  example: 2000.00
                contaBloqueada:
                  type: boolean
                  description: "(Admin only) Define se a conta já começa bloqueada."
                  example: false
      responses:
        '201':
          description: "Usuário criado com sucesso."
        '400':
          description: "Erro de validação ou CPF já cadastrado."
        '401':
          description: "Não autorizado."
        '403':
          description: "Acesso negado."

    get:
      tags:
        - "Contas (Admin)"
      summary: "Lista todas as contas (Admin only)."
      description: "Retorna uma lista de todas as contas de usuário no sistema. Requer permissão de Administrador."
      security:
        - bearerAuth: []
      responses:
        '200':
          description: "Lista de contas retornada com sucesso."
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UsuarioConta'
        '401':
          description: "Não autorizado."
        '403':
          description: "Acesso negado."

  /usuarios-contas/{id}:
    patch:
      tags:
        - "Contas (Admin)"
      summary: "Realiza manutenção em uma conta (Admin only)."
      description: "Atualiza o limite de crédito ou o status de bloqueio de uma conta específica. Requer permissão de Administrador."
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                limiteCredito:
                  type: number
                  example: 5000.00
                contaBloqueada:
                  type: boolean
                  example: true
      responses:
        '200':
          description: "Conta atualizada com sucesso."
        '401':
          description: "Não autorizado."
        '403':
          description: "Acesso negado."
        '404':
          description: "Conta não encontrada."